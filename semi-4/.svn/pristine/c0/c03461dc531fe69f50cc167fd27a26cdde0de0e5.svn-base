package com.semi4.dao;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.semi4.utils.IbatisUtil;
import com.semi4.vo.Purchase;

public class PurchaseDao {

	// �̱��� ��ü
	private static PurchaseDao self = new PurchaseDao();    // �ڱ� �ڽ��� ��ü�� ��� ���������� ��ü�� �����Ѵ�.
	private PurchaseDao() {}							// �����ڸ� private���� ����
	public static PurchaseDao getInstance() {			// UserDao ��ü�� �����ϴ� �����޼ҵ带 ����
		return self;
	} 
		
	private SqlMapClient sqlmap = IbatisUtil.getSqlmap();
	
	@SuppressWarnings("unchecked")
	public List<Purchase> getOrderByPage(Map<String, Object> criteria) throws SQLException {
		return sqlmap.queryForList("purchase.getOrderByPage", criteria);
	}
	
	public int getOrderByCount(int userNo) throws SQLException {
		return (Integer) sqlmap.queryForObject("purchase.getOrderByCount", userNo);
	}
	
	@SuppressWarnings("unchecked")
	public List<Purchase> getAllPurchases () throws SQLException {
		return sqlmap.queryForList("purchase.getAllPurchases");
	}
	
	@SuppressWarnings("unchecked")
	public List<Purchase> getPurchasesByUserNo (int userNo) throws SQLException {
		return sqlmap.queryForList("purchase.getPurchasesByUserNo", userNo);
	}
	
	public void insertPurchase (Purchase purchase) throws SQLException {
		sqlmap.insert("purchase.insertPurchase", purchase);
	}
	
	public int getPurchaseNo() throws SQLException {
		return (Integer)sqlmap.queryForObject("purchase.getPurchaseNo");
	}
	
	public Purchase getPurchasesByPurchaseNo(int purchaseNo) throws SQLException {
		return (Purchase) sqlmap.queryForObject("purchase.getPurchasesByPurchaseNo", purchaseNo);
	}

}
