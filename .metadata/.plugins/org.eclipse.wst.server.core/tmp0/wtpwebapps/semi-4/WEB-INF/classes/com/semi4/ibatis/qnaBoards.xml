<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="qnaboard">

	<!-- 게시판에 글을 등록한 유저를 조회하는 기능 -->
	<select id="getQnaBoardUserById" parameterClass="int" resultClass="QnaBoard">
		select
			qna_no				as no,
  			qna_title			as title,
  			qna_contents		as content,
  			qna_create_date		as createDate,
  			qna_count			as count,
  			user_no				as "user.no"
	    from
			qna_boards
	    where
	        user_no = #value#
    </select>

	<insert id="insertQnaBoard" parameterClass="QnaBoard">
		insert into qna_boards
		(qna_no, qna_title, qna_contents, user_no)
		values
		(qna_board_no_seq.nextval, #title#, #content#, #user.no#)
	</insert>
	
	<update id="updateQnaBoard" parameterClass="QnaBoard">
		update
			qna_boards
		set
			qna_title = #title#,
			qna_contents = #content#
		where
			qna_no = #no#
	</update>
	
	<update id="updateQnaCountByno" parameterClass="QnaBoard">
		update
			qna_boards
		set
			qna_count = #count#
		where
			qna_no = #no#
	</update>
	
	<select id="getQnaBoardBySearchCount" parameterClass="map" resultClass="int">
		select
			count(*)
		from
			qna_boards a, users b
		where	
			a.user_no = b.user_no
			<dynamic>
				<isNotNull property="type">
					<isEqual property="type" compareValue="title">
						and a.qna_title like '%' || #keyword# || '%'
					</isEqual>
					<isEqual property="type" compareValue="writer">
						and b.user_name like '%' || #keyword# || '%'
					</isEqual>
				</isNotNull>
			</dynamic>
	</select>
	
	<select id="getQnaBoardBySearch" parameterClass="map" resultClass="QnaBoard">
		select
			rn,
			qna_no				as no,
			qna_title			as title,
			qna_contents		as content,
			qna_create_date		as createDate,
			qna_count			as count,
			user_no				as "user.no",
			user_name			as "user.name"
		from
			(
				select
					row_number() over (order by qna_no desc) rn,
					a.qna_no,
					a.qna_title,
					a.qna_contents,
					a.qna_create_date,
					a.qna_count,
					a.user_no,
					b.user_name
				from
					qna_boards a, users b
				where
					a.user_no = b.user_no
					<dynamic>
						<isNotNull property="type">
							<isEqual property="type" compareValue="title">
								and a.qna_title like '%' || #keyword# || '%'
							</isEqual>
							<isEqual property="type" compareValue="writer">
								and b.user_name like '%' || #keyword# || '%'
							</isEqual>
						</isNotNull>
					</dynamic>
			) 		
		where
			rn >= #begin# and rn &lt;= #end#
	</select>	
	
	<select id="getAllQnaBoards" resultClass="QnaBoard">
		select
			qna_no				as no,
			qna_title			as title,
			qna_contents		as content,
			qna_create_date		as createDate,
			qna_count			as count,
			user_no				as "user.no"
		from
			qna_boards
		order by
			qna_no desc
	</select>
	
	<select id="getQnaBoardCount" resultClass="int">
		select
			count(*)
		from	
			qna_boards
	</select>
	
	<select id="getBoardByQnaNo" parameterClass="int" resultClass="QnaBoard">
		select 
			A.qna_no				as no,
			A.qna_title				as title,
			A.qna_contents			as content,
			A.qna_create_date		as createDate,
			A.user_no				as "user.no",
			B.user_name				as "user.name",
			A.qna_count				as count
		from
			qna_boards A, users B
		where
			A.user_no = B.user_no
		and
			qna_no = #value#
	</select>
      
  	<select id="getNewQnaBoards" parameterClass="map" resultClass="QnaBoard">
  		select
  			qna_no				as no,
  			qna_title			as title,
  			qna_contents		as content,
  			qna_create_date		as createDate,
  			qna_count			as count,
  			user_no				as "user.no"
  		from
  			(select
  				row_number() over (order by qna_no desc) rn,
  				qna_no,				
  				qna_title,			
  				qna_contents,		
  				qna_create_date,		
  				qna_count,			
  				user_no				
  			 from
  			 	qna_boards)
  		where
  			rn >= #begin# and rn &lt;= #end#
  	</select>    
      
	<delete id="deleteQnaBoard" parameterClass="int">
		delete from
			qna_boards
		where
			qna_no = #value#
	</delete>  
</sqlMap>